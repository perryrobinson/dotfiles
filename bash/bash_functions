#!/usr/bin/env bash
# ~/.bash_functions: custom functions

# Create a directory and cd into it
mkcd() {
    mkdir -p "$1" && cd "$1"
}

# Extract various archive formats
extract() {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)   tar xjf $1     ;;
            *.tar.gz)    tar xzf $1     ;;
            *.bz2)       bunzip2 $1     ;;
            *.rar)       unrar e $1     ;;
            *.gz)        gunzip $1      ;;
            *.tar)       tar xf $1      ;;
            *.tbz2)      tar xjf $1     ;;
            *.tgz)       tar xzf $1     ;;
            *.zip)       unzip $1       ;;
            *.Z)         uncompress $1  ;;
            *.7z)        7z x $1        ;;
            *)           echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# Create a backup of a file with date
backup() {
    cp "$1" "$1.bak.$(date +%Y%m%d%H%M%S)"
}

# dos2unix
d2u() {
    find . -type f -print0 | xargs -0 dos2unix
}

# nvm auto use if .nvmrc is present
nvm_auto_use() {
  if [ -f .nvmrc ]; then
    local nvmrc_node_version current_node_version
    nvmrc_node_version=$(cat .nvmrc | tr -d 'v')
    current_node_version=$(node --version 2>/dev/null | tr -d 'v')
    if [[ "$current_node_version" != "$nvmrc_node_version" ]]; then
      # Use --silent flag and redirect all output to /dev/null to suppress messages
      nvm use --silent >/dev/null 2>&1
    fi
  fi
}

if [[ "$PROMPT_COMMAND" != *nvm_auto_use* ]]; then
  PROMPT_COMMAND="nvm_auto_use;$PROMPT_COMMAND"
fi